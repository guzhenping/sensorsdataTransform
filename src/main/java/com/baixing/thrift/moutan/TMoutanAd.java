/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.baixing.thrift.moutan;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.10.0)", date = "2017-06-13")
public class TMoutanAd implements org.apache.thrift.TBase<TMoutanAd, TMoutanAd._Fields>, java.io.Serializable, Cloneable, Comparable<TMoutanAd> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("TMoutanAd");

  private static final org.apache.thrift.protocol.TField MOUTAN_STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("moutanStatus", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField AD_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("adId", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField SITE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("siteId", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField MOUTAN_MODIFIED_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("moutanModifiedTime", org.apache.thrift.protocol.TType.I64, (short)4);
  private static final org.apache.thrift.protocol.TField MOUTAN_DING_END_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("moutanDingEndTime", org.apache.thrift.protocol.TType.I64, (short)5);
  private static final org.apache.thrift.protocol.TField CREATED_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("createdTime", org.apache.thrift.protocol.TType.I64, (short)6);
  private static final org.apache.thrift.protocol.TField SITE_STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("siteStatus", org.apache.thrift.protocol.TType.I32, (short)7);
  private static final org.apache.thrift.protocol.TField RETURNED_REASON_FIELD_DESC = new org.apache.thrift.protocol.TField("returnedReason", org.apache.thrift.protocol.TType.STRING, (short)8);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new TMoutanAdStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new TMoutanAdTupleSchemeFactory();

  /**
   * 
   * @see CollectedStatus
   */
  public CollectedStatus moutanStatus; // required
  public java.lang.String adId; // required
  public java.lang.String siteId; // required
  public long moutanModifiedTime; // optional
  public long moutanDingEndTime; // optional
  public long createdTime; // optional
  public int siteStatus; // optional
  public java.lang.String returnedReason; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    /**
     * 
     * @see CollectedStatus
     */
    MOUTAN_STATUS((short)1, "moutanStatus"),
    AD_ID((short)2, "adId"),
    SITE_ID((short)3, "siteId"),
    MOUTAN_MODIFIED_TIME((short)4, "moutanModifiedTime"),
    MOUTAN_DING_END_TIME((short)5, "moutanDingEndTime"),
    CREATED_TIME((short)6, "createdTime"),
    SITE_STATUS((short)7, "siteStatus"),
    RETURNED_REASON((short)8, "returnedReason");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // MOUTAN_STATUS
          return MOUTAN_STATUS;
        case 2: // AD_ID
          return AD_ID;
        case 3: // SITE_ID
          return SITE_ID;
        case 4: // MOUTAN_MODIFIED_TIME
          return MOUTAN_MODIFIED_TIME;
        case 5: // MOUTAN_DING_END_TIME
          return MOUTAN_DING_END_TIME;
        case 6: // CREATED_TIME
          return CREATED_TIME;
        case 7: // SITE_STATUS
          return SITE_STATUS;
        case 8: // RETURNED_REASON
          return RETURNED_REASON;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __MOUTANMODIFIEDTIME_ISSET_ID = 0;
  private static final int __MOUTANDINGENDTIME_ISSET_ID = 1;
  private static final int __CREATEDTIME_ISSET_ID = 2;
  private static final int __SITESTATUS_ISSET_ID = 3;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.MOUTAN_MODIFIED_TIME,_Fields.MOUTAN_DING_END_TIME,_Fields.CREATED_TIME,_Fields.SITE_STATUS,_Fields.RETURNED_REASON};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.MOUTAN_STATUS, new org.apache.thrift.meta_data.FieldMetaData("moutanStatus", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, CollectedStatus.class)));
    tmpMap.put(_Fields.AD_ID, new org.apache.thrift.meta_data.FieldMetaData("adId", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SITE_ID, new org.apache.thrift.meta_data.FieldMetaData("siteId", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MOUTAN_MODIFIED_TIME, new org.apache.thrift.meta_data.FieldMetaData("moutanModifiedTime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.MOUTAN_DING_END_TIME, new org.apache.thrift.meta_data.FieldMetaData("moutanDingEndTime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.CREATED_TIME, new org.apache.thrift.meta_data.FieldMetaData("createdTime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.SITE_STATUS, new org.apache.thrift.meta_data.FieldMetaData("siteStatus", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.RETURNED_REASON, new org.apache.thrift.meta_data.FieldMetaData("returnedReason", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(TMoutanAd.class, metaDataMap);
  }

  public TMoutanAd() {
  }

  public TMoutanAd(
    CollectedStatus moutanStatus,
    java.lang.String adId,
    java.lang.String siteId)
  {
    this();
    this.moutanStatus = moutanStatus;
    this.adId = adId;
    this.siteId = siteId;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public TMoutanAd(TMoutanAd other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetMoutanStatus()) {
      this.moutanStatus = other.moutanStatus;
    }
    if (other.isSetAdId()) {
      this.adId = other.adId;
    }
    if (other.isSetSiteId()) {
      this.siteId = other.siteId;
    }
    this.moutanModifiedTime = other.moutanModifiedTime;
    this.moutanDingEndTime = other.moutanDingEndTime;
    this.createdTime = other.createdTime;
    this.siteStatus = other.siteStatus;
    if (other.isSetReturnedReason()) {
      this.returnedReason = other.returnedReason;
    }
  }

  public TMoutanAd deepCopy() {
    return new TMoutanAd(this);
  }

  @Override
  public void clear() {
    this.moutanStatus = null;
    this.adId = null;
    this.siteId = null;
    setMoutanModifiedTimeIsSet(false);
    this.moutanModifiedTime = 0;
    setMoutanDingEndTimeIsSet(false);
    this.moutanDingEndTime = 0;
    setCreatedTimeIsSet(false);
    this.createdTime = 0;
    setSiteStatusIsSet(false);
    this.siteStatus = 0;
    this.returnedReason = null;
  }

  /**
   * 
   * @see CollectedStatus
   */
  public CollectedStatus getMoutanStatus() {
    return this.moutanStatus;
  }

  /**
   * 
   * @see CollectedStatus
   */
  public TMoutanAd setMoutanStatus(CollectedStatus moutanStatus) {
    this.moutanStatus = moutanStatus;
    return this;
  }

  public void unsetMoutanStatus() {
    this.moutanStatus = null;
  }

  /** Returns true if field moutanStatus is set (has been assigned a value) and false otherwise */
  public boolean isSetMoutanStatus() {
    return this.moutanStatus != null;
  }

  public void setMoutanStatusIsSet(boolean value) {
    if (!value) {
      this.moutanStatus = null;
    }
  }

  public java.lang.String getAdId() {
    return this.adId;
  }

  public TMoutanAd setAdId(java.lang.String adId) {
    this.adId = adId;
    return this;
  }

  public void unsetAdId() {
    this.adId = null;
  }

  /** Returns true if field adId is set (has been assigned a value) and false otherwise */
  public boolean isSetAdId() {
    return this.adId != null;
  }

  public void setAdIdIsSet(boolean value) {
    if (!value) {
      this.adId = null;
    }
  }

  public java.lang.String getSiteId() {
    return this.siteId;
  }

  public TMoutanAd setSiteId(java.lang.String siteId) {
    this.siteId = siteId;
    return this;
  }

  public void unsetSiteId() {
    this.siteId = null;
  }

  /** Returns true if field siteId is set (has been assigned a value) and false otherwise */
  public boolean isSetSiteId() {
    return this.siteId != null;
  }

  public void setSiteIdIsSet(boolean value) {
    if (!value) {
      this.siteId = null;
    }
  }

  public long getMoutanModifiedTime() {
    return this.moutanModifiedTime;
  }

  public TMoutanAd setMoutanModifiedTime(long moutanModifiedTime) {
    this.moutanModifiedTime = moutanModifiedTime;
    setMoutanModifiedTimeIsSet(true);
    return this;
  }

  public void unsetMoutanModifiedTime() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __MOUTANMODIFIEDTIME_ISSET_ID);
  }

  /** Returns true if field moutanModifiedTime is set (has been assigned a value) and false otherwise */
  public boolean isSetMoutanModifiedTime() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __MOUTANMODIFIEDTIME_ISSET_ID);
  }

  public void setMoutanModifiedTimeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __MOUTANMODIFIEDTIME_ISSET_ID, value);
  }

  public long getMoutanDingEndTime() {
    return this.moutanDingEndTime;
  }

  public TMoutanAd setMoutanDingEndTime(long moutanDingEndTime) {
    this.moutanDingEndTime = moutanDingEndTime;
    setMoutanDingEndTimeIsSet(true);
    return this;
  }

  public void unsetMoutanDingEndTime() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __MOUTANDINGENDTIME_ISSET_ID);
  }

  /** Returns true if field moutanDingEndTime is set (has been assigned a value) and false otherwise */
  public boolean isSetMoutanDingEndTime() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __MOUTANDINGENDTIME_ISSET_ID);
  }

  public void setMoutanDingEndTimeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __MOUTANDINGENDTIME_ISSET_ID, value);
  }

  public long getCreatedTime() {
    return this.createdTime;
  }

  public TMoutanAd setCreatedTime(long createdTime) {
    this.createdTime = createdTime;
    setCreatedTimeIsSet(true);
    return this;
  }

  public void unsetCreatedTime() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __CREATEDTIME_ISSET_ID);
  }

  /** Returns true if field createdTime is set (has been assigned a value) and false otherwise */
  public boolean isSetCreatedTime() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __CREATEDTIME_ISSET_ID);
  }

  public void setCreatedTimeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __CREATEDTIME_ISSET_ID, value);
  }

  public int getSiteStatus() {
    return this.siteStatus;
  }

  public TMoutanAd setSiteStatus(int siteStatus) {
    this.siteStatus = siteStatus;
    setSiteStatusIsSet(true);
    return this;
  }

  public void unsetSiteStatus() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __SITESTATUS_ISSET_ID);
  }

  /** Returns true if field siteStatus is set (has been assigned a value) and false otherwise */
  public boolean isSetSiteStatus() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __SITESTATUS_ISSET_ID);
  }

  public void setSiteStatusIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __SITESTATUS_ISSET_ID, value);
  }

  public java.lang.String getReturnedReason() {
    return this.returnedReason;
  }

  public TMoutanAd setReturnedReason(java.lang.String returnedReason) {
    this.returnedReason = returnedReason;
    return this;
  }

  public void unsetReturnedReason() {
    this.returnedReason = null;
  }

  /** Returns true if field returnedReason is set (has been assigned a value) and false otherwise */
  public boolean isSetReturnedReason() {
    return this.returnedReason != null;
  }

  public void setReturnedReasonIsSet(boolean value) {
    if (!value) {
      this.returnedReason = null;
    }
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case MOUTAN_STATUS:
      if (value == null) {
        unsetMoutanStatus();
      } else {
        setMoutanStatus((CollectedStatus)value);
      }
      break;

    case AD_ID:
      if (value == null) {
        unsetAdId();
      } else {
        setAdId((java.lang.String)value);
      }
      break;

    case SITE_ID:
      if (value == null) {
        unsetSiteId();
      } else {
        setSiteId((java.lang.String)value);
      }
      break;

    case MOUTAN_MODIFIED_TIME:
      if (value == null) {
        unsetMoutanModifiedTime();
      } else {
        setMoutanModifiedTime((java.lang.Long)value);
      }
      break;

    case MOUTAN_DING_END_TIME:
      if (value == null) {
        unsetMoutanDingEndTime();
      } else {
        setMoutanDingEndTime((java.lang.Long)value);
      }
      break;

    case CREATED_TIME:
      if (value == null) {
        unsetCreatedTime();
      } else {
        setCreatedTime((java.lang.Long)value);
      }
      break;

    case SITE_STATUS:
      if (value == null) {
        unsetSiteStatus();
      } else {
        setSiteStatus((java.lang.Integer)value);
      }
      break;

    case RETURNED_REASON:
      if (value == null) {
        unsetReturnedReason();
      } else {
        setReturnedReason((java.lang.String)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case MOUTAN_STATUS:
      return getMoutanStatus();

    case AD_ID:
      return getAdId();

    case SITE_ID:
      return getSiteId();

    case MOUTAN_MODIFIED_TIME:
      return getMoutanModifiedTime();

    case MOUTAN_DING_END_TIME:
      return getMoutanDingEndTime();

    case CREATED_TIME:
      return getCreatedTime();

    case SITE_STATUS:
      return getSiteStatus();

    case RETURNED_REASON:
      return getReturnedReason();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case MOUTAN_STATUS:
      return isSetMoutanStatus();
    case AD_ID:
      return isSetAdId();
    case SITE_ID:
      return isSetSiteId();
    case MOUTAN_MODIFIED_TIME:
      return isSetMoutanModifiedTime();
    case MOUTAN_DING_END_TIME:
      return isSetMoutanDingEndTime();
    case CREATED_TIME:
      return isSetCreatedTime();
    case SITE_STATUS:
      return isSetSiteStatus();
    case RETURNED_REASON:
      return isSetReturnedReason();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof TMoutanAd)
      return this.equals((TMoutanAd)that);
    return false;
  }

  public boolean equals(TMoutanAd that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_moutanStatus = true && this.isSetMoutanStatus();
    boolean that_present_moutanStatus = true && that.isSetMoutanStatus();
    if (this_present_moutanStatus || that_present_moutanStatus) {
      if (!(this_present_moutanStatus && that_present_moutanStatus))
        return false;
      if (!this.moutanStatus.equals(that.moutanStatus))
        return false;
    }

    boolean this_present_adId = true && this.isSetAdId();
    boolean that_present_adId = true && that.isSetAdId();
    if (this_present_adId || that_present_adId) {
      if (!(this_present_adId && that_present_adId))
        return false;
      if (!this.adId.equals(that.adId))
        return false;
    }

    boolean this_present_siteId = true && this.isSetSiteId();
    boolean that_present_siteId = true && that.isSetSiteId();
    if (this_present_siteId || that_present_siteId) {
      if (!(this_present_siteId && that_present_siteId))
        return false;
      if (!this.siteId.equals(that.siteId))
        return false;
    }

    boolean this_present_moutanModifiedTime = true && this.isSetMoutanModifiedTime();
    boolean that_present_moutanModifiedTime = true && that.isSetMoutanModifiedTime();
    if (this_present_moutanModifiedTime || that_present_moutanModifiedTime) {
      if (!(this_present_moutanModifiedTime && that_present_moutanModifiedTime))
        return false;
      if (this.moutanModifiedTime != that.moutanModifiedTime)
        return false;
    }

    boolean this_present_moutanDingEndTime = true && this.isSetMoutanDingEndTime();
    boolean that_present_moutanDingEndTime = true && that.isSetMoutanDingEndTime();
    if (this_present_moutanDingEndTime || that_present_moutanDingEndTime) {
      if (!(this_present_moutanDingEndTime && that_present_moutanDingEndTime))
        return false;
      if (this.moutanDingEndTime != that.moutanDingEndTime)
        return false;
    }

    boolean this_present_createdTime = true && this.isSetCreatedTime();
    boolean that_present_createdTime = true && that.isSetCreatedTime();
    if (this_present_createdTime || that_present_createdTime) {
      if (!(this_present_createdTime && that_present_createdTime))
        return false;
      if (this.createdTime != that.createdTime)
        return false;
    }

    boolean this_present_siteStatus = true && this.isSetSiteStatus();
    boolean that_present_siteStatus = true && that.isSetSiteStatus();
    if (this_present_siteStatus || that_present_siteStatus) {
      if (!(this_present_siteStatus && that_present_siteStatus))
        return false;
      if (this.siteStatus != that.siteStatus)
        return false;
    }

    boolean this_present_returnedReason = true && this.isSetReturnedReason();
    boolean that_present_returnedReason = true && that.isSetReturnedReason();
    if (this_present_returnedReason || that_present_returnedReason) {
      if (!(this_present_returnedReason && that_present_returnedReason))
        return false;
      if (!this.returnedReason.equals(that.returnedReason))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetMoutanStatus()) ? 131071 : 524287);
    if (isSetMoutanStatus())
      hashCode = hashCode * 8191 + moutanStatus.getValue();

    hashCode = hashCode * 8191 + ((isSetAdId()) ? 131071 : 524287);
    if (isSetAdId())
      hashCode = hashCode * 8191 + adId.hashCode();

    hashCode = hashCode * 8191 + ((isSetSiteId()) ? 131071 : 524287);
    if (isSetSiteId())
      hashCode = hashCode * 8191 + siteId.hashCode();

    hashCode = hashCode * 8191 + ((isSetMoutanModifiedTime()) ? 131071 : 524287);
    if (isSetMoutanModifiedTime())
      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(moutanModifiedTime);

    hashCode = hashCode * 8191 + ((isSetMoutanDingEndTime()) ? 131071 : 524287);
    if (isSetMoutanDingEndTime())
      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(moutanDingEndTime);

    hashCode = hashCode * 8191 + ((isSetCreatedTime()) ? 131071 : 524287);
    if (isSetCreatedTime())
      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(createdTime);

    hashCode = hashCode * 8191 + ((isSetSiteStatus()) ? 131071 : 524287);
    if (isSetSiteStatus())
      hashCode = hashCode * 8191 + siteStatus;

    hashCode = hashCode * 8191 + ((isSetReturnedReason()) ? 131071 : 524287);
    if (isSetReturnedReason())
      hashCode = hashCode * 8191 + returnedReason.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(TMoutanAd other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetMoutanStatus()).compareTo(other.isSetMoutanStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMoutanStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.moutanStatus, other.moutanStatus);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetAdId()).compareTo(other.isSetAdId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAdId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.adId, other.adId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetSiteId()).compareTo(other.isSetSiteId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSiteId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.siteId, other.siteId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetMoutanModifiedTime()).compareTo(other.isSetMoutanModifiedTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMoutanModifiedTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.moutanModifiedTime, other.moutanModifiedTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetMoutanDingEndTime()).compareTo(other.isSetMoutanDingEndTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMoutanDingEndTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.moutanDingEndTime, other.moutanDingEndTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCreatedTime()).compareTo(other.isSetCreatedTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreatedTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createdTime, other.createdTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetSiteStatus()).compareTo(other.isSetSiteStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSiteStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.siteStatus, other.siteStatus);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetReturnedReason()).compareTo(other.isSetReturnedReason());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetReturnedReason()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.returnedReason, other.returnedReason);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("TMoutanAd(");
    boolean first = true;

    sb.append("moutanStatus:");
    if (this.moutanStatus == null) {
      sb.append("null");
    } else {
      sb.append(this.moutanStatus);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("adId:");
    if (this.adId == null) {
      sb.append("null");
    } else {
      sb.append(this.adId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("siteId:");
    if (this.siteId == null) {
      sb.append("null");
    } else {
      sb.append(this.siteId);
    }
    first = false;
    if (isSetMoutanModifiedTime()) {
      if (!first) sb.append(", ");
      sb.append("moutanModifiedTime:");
      sb.append(this.moutanModifiedTime);
      first = false;
    }
    if (isSetMoutanDingEndTime()) {
      if (!first) sb.append(", ");
      sb.append("moutanDingEndTime:");
      sb.append(this.moutanDingEndTime);
      first = false;
    }
    if (isSetCreatedTime()) {
      if (!first) sb.append(", ");
      sb.append("createdTime:");
      sb.append(this.createdTime);
      first = false;
    }
    if (isSetSiteStatus()) {
      if (!first) sb.append(", ");
      sb.append("siteStatus:");
      sb.append(this.siteStatus);
      first = false;
    }
    if (isSetReturnedReason()) {
      if (!first) sb.append(", ");
      sb.append("returnedReason:");
      if (this.returnedReason == null) {
        sb.append("null");
      } else {
        sb.append(this.returnedReason);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    if (moutanStatus == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'moutanStatus' was not present! Struct: " + toString());
    }
    if (adId == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'adId' was not present! Struct: " + toString());
    }
    if (siteId == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'siteId' was not present! Struct: " + toString());
    }
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class TMoutanAdStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public TMoutanAdStandardScheme getScheme() {
      return new TMoutanAdStandardScheme();
    }
  }

  private static class TMoutanAdStandardScheme extends org.apache.thrift.scheme.StandardScheme<TMoutanAd> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, TMoutanAd struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // MOUTAN_STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.moutanStatus = com.baixing.thrift.moutan.CollectedStatus.findByValue(iprot.readI32());
              struct.setMoutanStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // AD_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.adId = iprot.readString();
              struct.setAdIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // SITE_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.siteId = iprot.readString();
              struct.setSiteIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // MOUTAN_MODIFIED_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.moutanModifiedTime = iprot.readI64();
              struct.setMoutanModifiedTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // MOUTAN_DING_END_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.moutanDingEndTime = iprot.readI64();
              struct.setMoutanDingEndTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // CREATED_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.createdTime = iprot.readI64();
              struct.setCreatedTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // SITE_STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.siteStatus = iprot.readI32();
              struct.setSiteStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // RETURNED_REASON
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.returnedReason = iprot.readString();
              struct.setReturnedReasonIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, TMoutanAd struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.moutanStatus != null) {
        oprot.writeFieldBegin(MOUTAN_STATUS_FIELD_DESC);
        oprot.writeI32(struct.moutanStatus.getValue());
        oprot.writeFieldEnd();
      }
      if (struct.adId != null) {
        oprot.writeFieldBegin(AD_ID_FIELD_DESC);
        oprot.writeString(struct.adId);
        oprot.writeFieldEnd();
      }
      if (struct.siteId != null) {
        oprot.writeFieldBegin(SITE_ID_FIELD_DESC);
        oprot.writeString(struct.siteId);
        oprot.writeFieldEnd();
      }
      if (struct.isSetMoutanModifiedTime()) {
        oprot.writeFieldBegin(MOUTAN_MODIFIED_TIME_FIELD_DESC);
        oprot.writeI64(struct.moutanModifiedTime);
        oprot.writeFieldEnd();
      }
      if (struct.isSetMoutanDingEndTime()) {
        oprot.writeFieldBegin(MOUTAN_DING_END_TIME_FIELD_DESC);
        oprot.writeI64(struct.moutanDingEndTime);
        oprot.writeFieldEnd();
      }
      if (struct.isSetCreatedTime()) {
        oprot.writeFieldBegin(CREATED_TIME_FIELD_DESC);
        oprot.writeI64(struct.createdTime);
        oprot.writeFieldEnd();
      }
      if (struct.isSetSiteStatus()) {
        oprot.writeFieldBegin(SITE_STATUS_FIELD_DESC);
        oprot.writeI32(struct.siteStatus);
        oprot.writeFieldEnd();
      }
      if (struct.returnedReason != null) {
        if (struct.isSetReturnedReason()) {
          oprot.writeFieldBegin(RETURNED_REASON_FIELD_DESC);
          oprot.writeString(struct.returnedReason);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class TMoutanAdTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public TMoutanAdTupleScheme getScheme() {
      return new TMoutanAdTupleScheme();
    }
  }

  private static class TMoutanAdTupleScheme extends org.apache.thrift.scheme.TupleScheme<TMoutanAd> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, TMoutanAd struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      oprot.writeI32(struct.moutanStatus.getValue());
      oprot.writeString(struct.adId);
      oprot.writeString(struct.siteId);
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetMoutanModifiedTime()) {
        optionals.set(0);
      }
      if (struct.isSetMoutanDingEndTime()) {
        optionals.set(1);
      }
      if (struct.isSetCreatedTime()) {
        optionals.set(2);
      }
      if (struct.isSetSiteStatus()) {
        optionals.set(3);
      }
      if (struct.isSetReturnedReason()) {
        optionals.set(4);
      }
      oprot.writeBitSet(optionals, 5);
      if (struct.isSetMoutanModifiedTime()) {
        oprot.writeI64(struct.moutanModifiedTime);
      }
      if (struct.isSetMoutanDingEndTime()) {
        oprot.writeI64(struct.moutanDingEndTime);
      }
      if (struct.isSetCreatedTime()) {
        oprot.writeI64(struct.createdTime);
      }
      if (struct.isSetSiteStatus()) {
        oprot.writeI32(struct.siteStatus);
      }
      if (struct.isSetReturnedReason()) {
        oprot.writeString(struct.returnedReason);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, TMoutanAd struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      struct.moutanStatus = com.baixing.thrift.moutan.CollectedStatus.findByValue(iprot.readI32());
      struct.setMoutanStatusIsSet(true);
      struct.adId = iprot.readString();
      struct.setAdIdIsSet(true);
      struct.siteId = iprot.readString();
      struct.setSiteIdIsSet(true);
      java.util.BitSet incoming = iprot.readBitSet(5);
      if (incoming.get(0)) {
        struct.moutanModifiedTime = iprot.readI64();
        struct.setMoutanModifiedTimeIsSet(true);
      }
      if (incoming.get(1)) {
        struct.moutanDingEndTime = iprot.readI64();
        struct.setMoutanDingEndTimeIsSet(true);
      }
      if (incoming.get(2)) {
        struct.createdTime = iprot.readI64();
        struct.setCreatedTimeIsSet(true);
      }
      if (incoming.get(3)) {
        struct.siteStatus = iprot.readI32();
        struct.setSiteStatusIsSet(true);
      }
      if (incoming.get(4)) {
        struct.returnedReason = iprot.readString();
        struct.setReturnedReasonIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

