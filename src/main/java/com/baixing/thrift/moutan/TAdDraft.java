/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.baixing.thrift.moutan;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.10.0)", date = "2017-06-13")
public class TAdDraft implements org.apache.thrift.TBase<TAdDraft, TAdDraft._Fields>, java.io.Serializable, Cloneable, Comparable<TAdDraft> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("TAdDraft");

  private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField UID_FIELD_DESC = new org.apache.thrift.protocol.TField("uid", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField SITE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("siteId", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField DATA_FIELD_DESC = new org.apache.thrift.protocol.TField("data", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField PAY_STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("payStatus", org.apache.thrift.protocol.TType.I32, (short)5);
  private static final org.apache.thrift.protocol.TField PAID_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("paidTime", org.apache.thrift.protocol.TType.I64, (short)6);
  private static final org.apache.thrift.protocol.TField POST_STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("postStatus", org.apache.thrift.protocol.TType.I32, (short)7);
  private static final org.apache.thrift.protocol.TField AD_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("adId", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField CREATED_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("createdTime", org.apache.thrift.protocol.TType.I64, (short)9);
  private static final org.apache.thrift.protocol.TField MODIFIED_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("modifiedTime", org.apache.thrift.protocol.TType.I64, (short)10);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new TAdDraftStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new TAdDraftTupleSchemeFactory();

  public java.lang.String id; // required
  public java.lang.String uid; // required
  public java.lang.String siteId; // required
  public java.lang.String data; // required
  /**
   * 
   * @see AdDraftPayStatus
   */
  public AdDraftPayStatus payStatus; // optional
  public long paidTime; // optional
  /**
   * 
   * @see AdDraftPostStatus
   */
  public AdDraftPostStatus postStatus; // optional
  public java.lang.String adId; // optional
  public long createdTime; // optional
  public long modifiedTime; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ID((short)1, "id"),
    UID((short)2, "uid"),
    SITE_ID((short)3, "siteId"),
    DATA((short)4, "data"),
    /**
     * 
     * @see AdDraftPayStatus
     */
    PAY_STATUS((short)5, "payStatus"),
    PAID_TIME((short)6, "paidTime"),
    /**
     * 
     * @see AdDraftPostStatus
     */
    POST_STATUS((short)7, "postStatus"),
    AD_ID((short)8, "adId"),
    CREATED_TIME((short)9, "createdTime"),
    MODIFIED_TIME((short)10, "modifiedTime");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID
          return ID;
        case 2: // UID
          return UID;
        case 3: // SITE_ID
          return SITE_ID;
        case 4: // DATA
          return DATA;
        case 5: // PAY_STATUS
          return PAY_STATUS;
        case 6: // PAID_TIME
          return PAID_TIME;
        case 7: // POST_STATUS
          return POST_STATUS;
        case 8: // AD_ID
          return AD_ID;
        case 9: // CREATED_TIME
          return CREATED_TIME;
        case 10: // MODIFIED_TIME
          return MODIFIED_TIME;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __PAIDTIME_ISSET_ID = 0;
  private static final int __CREATEDTIME_ISSET_ID = 1;
  private static final int __MODIFIEDTIME_ISSET_ID = 2;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.PAY_STATUS,_Fields.PAID_TIME,_Fields.POST_STATUS,_Fields.AD_ID,_Fields.CREATED_TIME,_Fields.MODIFIED_TIME};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.UID, new org.apache.thrift.meta_data.FieldMetaData("uid", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SITE_ID, new org.apache.thrift.meta_data.FieldMetaData("siteId", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DATA, new org.apache.thrift.meta_data.FieldMetaData("data", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PAY_STATUS, new org.apache.thrift.meta_data.FieldMetaData("payStatus", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, AdDraftPayStatus.class)));
    tmpMap.put(_Fields.PAID_TIME, new org.apache.thrift.meta_data.FieldMetaData("paidTime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.POST_STATUS, new org.apache.thrift.meta_data.FieldMetaData("postStatus", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, AdDraftPostStatus.class)));
    tmpMap.put(_Fields.AD_ID, new org.apache.thrift.meta_data.FieldMetaData("adId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CREATED_TIME, new org.apache.thrift.meta_data.FieldMetaData("createdTime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.MODIFIED_TIME, new org.apache.thrift.meta_data.FieldMetaData("modifiedTime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(TAdDraft.class, metaDataMap);
  }

  public TAdDraft() {
  }

  public TAdDraft(
    java.lang.String id,
    java.lang.String uid,
    java.lang.String siteId,
    java.lang.String data)
  {
    this();
    this.id = id;
    this.uid = uid;
    this.siteId = siteId;
    this.data = data;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public TAdDraft(TAdDraft other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetId()) {
      this.id = other.id;
    }
    if (other.isSetUid()) {
      this.uid = other.uid;
    }
    if (other.isSetSiteId()) {
      this.siteId = other.siteId;
    }
    if (other.isSetData()) {
      this.data = other.data;
    }
    if (other.isSetPayStatus()) {
      this.payStatus = other.payStatus;
    }
    this.paidTime = other.paidTime;
    if (other.isSetPostStatus()) {
      this.postStatus = other.postStatus;
    }
    if (other.isSetAdId()) {
      this.adId = other.adId;
    }
    this.createdTime = other.createdTime;
    this.modifiedTime = other.modifiedTime;
  }

  public TAdDraft deepCopy() {
    return new TAdDraft(this);
  }

  @Override
  public void clear() {
    this.id = null;
    this.uid = null;
    this.siteId = null;
    this.data = null;
    this.payStatus = null;
    setPaidTimeIsSet(false);
    this.paidTime = 0;
    this.postStatus = null;
    this.adId = null;
    setCreatedTimeIsSet(false);
    this.createdTime = 0;
    setModifiedTimeIsSet(false);
    this.modifiedTime = 0;
  }

  public java.lang.String getId() {
    return this.id;
  }

  public TAdDraft setId(java.lang.String id) {
    this.id = id;
    return this;
  }

  public void unsetId() {
    this.id = null;
  }

  /** Returns true if field id is set (has been assigned a value) and false otherwise */
  public boolean isSetId() {
    return this.id != null;
  }

  public void setIdIsSet(boolean value) {
    if (!value) {
      this.id = null;
    }
  }

  public java.lang.String getUid() {
    return this.uid;
  }

  public TAdDraft setUid(java.lang.String uid) {
    this.uid = uid;
    return this;
  }

  public void unsetUid() {
    this.uid = null;
  }

  /** Returns true if field uid is set (has been assigned a value) and false otherwise */
  public boolean isSetUid() {
    return this.uid != null;
  }

  public void setUidIsSet(boolean value) {
    if (!value) {
      this.uid = null;
    }
  }

  public java.lang.String getSiteId() {
    return this.siteId;
  }

  public TAdDraft setSiteId(java.lang.String siteId) {
    this.siteId = siteId;
    return this;
  }

  public void unsetSiteId() {
    this.siteId = null;
  }

  /** Returns true if field siteId is set (has been assigned a value) and false otherwise */
  public boolean isSetSiteId() {
    return this.siteId != null;
  }

  public void setSiteIdIsSet(boolean value) {
    if (!value) {
      this.siteId = null;
    }
  }

  public java.lang.String getData() {
    return this.data;
  }

  public TAdDraft setData(java.lang.String data) {
    this.data = data;
    return this;
  }

  public void unsetData() {
    this.data = null;
  }

  /** Returns true if field data is set (has been assigned a value) and false otherwise */
  public boolean isSetData() {
    return this.data != null;
  }

  public void setDataIsSet(boolean value) {
    if (!value) {
      this.data = null;
    }
  }

  /**
   * 
   * @see AdDraftPayStatus
   */
  public AdDraftPayStatus getPayStatus() {
    return this.payStatus;
  }

  /**
   * 
   * @see AdDraftPayStatus
   */
  public TAdDraft setPayStatus(AdDraftPayStatus payStatus) {
    this.payStatus = payStatus;
    return this;
  }

  public void unsetPayStatus() {
    this.payStatus = null;
  }

  /** Returns true if field payStatus is set (has been assigned a value) and false otherwise */
  public boolean isSetPayStatus() {
    return this.payStatus != null;
  }

  public void setPayStatusIsSet(boolean value) {
    if (!value) {
      this.payStatus = null;
    }
  }

  public long getPaidTime() {
    return this.paidTime;
  }

  public TAdDraft setPaidTime(long paidTime) {
    this.paidTime = paidTime;
    setPaidTimeIsSet(true);
    return this;
  }

  public void unsetPaidTime() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __PAIDTIME_ISSET_ID);
  }

  /** Returns true if field paidTime is set (has been assigned a value) and false otherwise */
  public boolean isSetPaidTime() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __PAIDTIME_ISSET_ID);
  }

  public void setPaidTimeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __PAIDTIME_ISSET_ID, value);
  }

  /**
   * 
   * @see AdDraftPostStatus
   */
  public AdDraftPostStatus getPostStatus() {
    return this.postStatus;
  }

  /**
   * 
   * @see AdDraftPostStatus
   */
  public TAdDraft setPostStatus(AdDraftPostStatus postStatus) {
    this.postStatus = postStatus;
    return this;
  }

  public void unsetPostStatus() {
    this.postStatus = null;
  }

  /** Returns true if field postStatus is set (has been assigned a value) and false otherwise */
  public boolean isSetPostStatus() {
    return this.postStatus != null;
  }

  public void setPostStatusIsSet(boolean value) {
    if (!value) {
      this.postStatus = null;
    }
  }

  public java.lang.String getAdId() {
    return this.adId;
  }

  public TAdDraft setAdId(java.lang.String adId) {
    this.adId = adId;
    return this;
  }

  public void unsetAdId() {
    this.adId = null;
  }

  /** Returns true if field adId is set (has been assigned a value) and false otherwise */
  public boolean isSetAdId() {
    return this.adId != null;
  }

  public void setAdIdIsSet(boolean value) {
    if (!value) {
      this.adId = null;
    }
  }

  public long getCreatedTime() {
    return this.createdTime;
  }

  public TAdDraft setCreatedTime(long createdTime) {
    this.createdTime = createdTime;
    setCreatedTimeIsSet(true);
    return this;
  }

  public void unsetCreatedTime() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __CREATEDTIME_ISSET_ID);
  }

  /** Returns true if field createdTime is set (has been assigned a value) and false otherwise */
  public boolean isSetCreatedTime() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __CREATEDTIME_ISSET_ID);
  }

  public void setCreatedTimeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __CREATEDTIME_ISSET_ID, value);
  }

  public long getModifiedTime() {
    return this.modifiedTime;
  }

  public TAdDraft setModifiedTime(long modifiedTime) {
    this.modifiedTime = modifiedTime;
    setModifiedTimeIsSet(true);
    return this;
  }

  public void unsetModifiedTime() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __MODIFIEDTIME_ISSET_ID);
  }

  /** Returns true if field modifiedTime is set (has been assigned a value) and false otherwise */
  public boolean isSetModifiedTime() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __MODIFIEDTIME_ISSET_ID);
  }

  public void setModifiedTimeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __MODIFIEDTIME_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((java.lang.String)value);
      }
      break;

    case UID:
      if (value == null) {
        unsetUid();
      } else {
        setUid((java.lang.String)value);
      }
      break;

    case SITE_ID:
      if (value == null) {
        unsetSiteId();
      } else {
        setSiteId((java.lang.String)value);
      }
      break;

    case DATA:
      if (value == null) {
        unsetData();
      } else {
        setData((java.lang.String)value);
      }
      break;

    case PAY_STATUS:
      if (value == null) {
        unsetPayStatus();
      } else {
        setPayStatus((AdDraftPayStatus)value);
      }
      break;

    case PAID_TIME:
      if (value == null) {
        unsetPaidTime();
      } else {
        setPaidTime((java.lang.Long)value);
      }
      break;

    case POST_STATUS:
      if (value == null) {
        unsetPostStatus();
      } else {
        setPostStatus((AdDraftPostStatus)value);
      }
      break;

    case AD_ID:
      if (value == null) {
        unsetAdId();
      } else {
        setAdId((java.lang.String)value);
      }
      break;

    case CREATED_TIME:
      if (value == null) {
        unsetCreatedTime();
      } else {
        setCreatedTime((java.lang.Long)value);
      }
      break;

    case MODIFIED_TIME:
      if (value == null) {
        unsetModifiedTime();
      } else {
        setModifiedTime((java.lang.Long)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case ID:
      return getId();

    case UID:
      return getUid();

    case SITE_ID:
      return getSiteId();

    case DATA:
      return getData();

    case PAY_STATUS:
      return getPayStatus();

    case PAID_TIME:
      return getPaidTime();

    case POST_STATUS:
      return getPostStatus();

    case AD_ID:
      return getAdId();

    case CREATED_TIME:
      return getCreatedTime();

    case MODIFIED_TIME:
      return getModifiedTime();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case ID:
      return isSetId();
    case UID:
      return isSetUid();
    case SITE_ID:
      return isSetSiteId();
    case DATA:
      return isSetData();
    case PAY_STATUS:
      return isSetPayStatus();
    case PAID_TIME:
      return isSetPaidTime();
    case POST_STATUS:
      return isSetPostStatus();
    case AD_ID:
      return isSetAdId();
    case CREATED_TIME:
      return isSetCreatedTime();
    case MODIFIED_TIME:
      return isSetModifiedTime();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof TAdDraft)
      return this.equals((TAdDraft)that);
    return false;
  }

  public boolean equals(TAdDraft that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_id = true && this.isSetId();
    boolean that_present_id = true && that.isSetId();
    if (this_present_id || that_present_id) {
      if (!(this_present_id && that_present_id))
        return false;
      if (!this.id.equals(that.id))
        return false;
    }

    boolean this_present_uid = true && this.isSetUid();
    boolean that_present_uid = true && that.isSetUid();
    if (this_present_uid || that_present_uid) {
      if (!(this_present_uid && that_present_uid))
        return false;
      if (!this.uid.equals(that.uid))
        return false;
    }

    boolean this_present_siteId = true && this.isSetSiteId();
    boolean that_present_siteId = true && that.isSetSiteId();
    if (this_present_siteId || that_present_siteId) {
      if (!(this_present_siteId && that_present_siteId))
        return false;
      if (!this.siteId.equals(that.siteId))
        return false;
    }

    boolean this_present_data = true && this.isSetData();
    boolean that_present_data = true && that.isSetData();
    if (this_present_data || that_present_data) {
      if (!(this_present_data && that_present_data))
        return false;
      if (!this.data.equals(that.data))
        return false;
    }

    boolean this_present_payStatus = true && this.isSetPayStatus();
    boolean that_present_payStatus = true && that.isSetPayStatus();
    if (this_present_payStatus || that_present_payStatus) {
      if (!(this_present_payStatus && that_present_payStatus))
        return false;
      if (!this.payStatus.equals(that.payStatus))
        return false;
    }

    boolean this_present_paidTime = true && this.isSetPaidTime();
    boolean that_present_paidTime = true && that.isSetPaidTime();
    if (this_present_paidTime || that_present_paidTime) {
      if (!(this_present_paidTime && that_present_paidTime))
        return false;
      if (this.paidTime != that.paidTime)
        return false;
    }

    boolean this_present_postStatus = true && this.isSetPostStatus();
    boolean that_present_postStatus = true && that.isSetPostStatus();
    if (this_present_postStatus || that_present_postStatus) {
      if (!(this_present_postStatus && that_present_postStatus))
        return false;
      if (!this.postStatus.equals(that.postStatus))
        return false;
    }

    boolean this_present_adId = true && this.isSetAdId();
    boolean that_present_adId = true && that.isSetAdId();
    if (this_present_adId || that_present_adId) {
      if (!(this_present_adId && that_present_adId))
        return false;
      if (!this.adId.equals(that.adId))
        return false;
    }

    boolean this_present_createdTime = true && this.isSetCreatedTime();
    boolean that_present_createdTime = true && that.isSetCreatedTime();
    if (this_present_createdTime || that_present_createdTime) {
      if (!(this_present_createdTime && that_present_createdTime))
        return false;
      if (this.createdTime != that.createdTime)
        return false;
    }

    boolean this_present_modifiedTime = true && this.isSetModifiedTime();
    boolean that_present_modifiedTime = true && that.isSetModifiedTime();
    if (this_present_modifiedTime || that_present_modifiedTime) {
      if (!(this_present_modifiedTime && that_present_modifiedTime))
        return false;
      if (this.modifiedTime != that.modifiedTime)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetId()) ? 131071 : 524287);
    if (isSetId())
      hashCode = hashCode * 8191 + id.hashCode();

    hashCode = hashCode * 8191 + ((isSetUid()) ? 131071 : 524287);
    if (isSetUid())
      hashCode = hashCode * 8191 + uid.hashCode();

    hashCode = hashCode * 8191 + ((isSetSiteId()) ? 131071 : 524287);
    if (isSetSiteId())
      hashCode = hashCode * 8191 + siteId.hashCode();

    hashCode = hashCode * 8191 + ((isSetData()) ? 131071 : 524287);
    if (isSetData())
      hashCode = hashCode * 8191 + data.hashCode();

    hashCode = hashCode * 8191 + ((isSetPayStatus()) ? 131071 : 524287);
    if (isSetPayStatus())
      hashCode = hashCode * 8191 + payStatus.getValue();

    hashCode = hashCode * 8191 + ((isSetPaidTime()) ? 131071 : 524287);
    if (isSetPaidTime())
      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(paidTime);

    hashCode = hashCode * 8191 + ((isSetPostStatus()) ? 131071 : 524287);
    if (isSetPostStatus())
      hashCode = hashCode * 8191 + postStatus.getValue();

    hashCode = hashCode * 8191 + ((isSetAdId()) ? 131071 : 524287);
    if (isSetAdId())
      hashCode = hashCode * 8191 + adId.hashCode();

    hashCode = hashCode * 8191 + ((isSetCreatedTime()) ? 131071 : 524287);
    if (isSetCreatedTime())
      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(createdTime);

    hashCode = hashCode * 8191 + ((isSetModifiedTime()) ? 131071 : 524287);
    if (isSetModifiedTime())
      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(modifiedTime);

    return hashCode;
  }

  @Override
  public int compareTo(TAdDraft other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetId()).compareTo(other.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetUid()).compareTo(other.isSetUid());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUid()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.uid, other.uid);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetSiteId()).compareTo(other.isSetSiteId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSiteId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.siteId, other.siteId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetData()).compareTo(other.isSetData());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetData()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.data, other.data);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetPayStatus()).compareTo(other.isSetPayStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPayStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.payStatus, other.payStatus);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetPaidTime()).compareTo(other.isSetPaidTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPaidTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.paidTime, other.paidTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetPostStatus()).compareTo(other.isSetPostStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPostStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.postStatus, other.postStatus);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetAdId()).compareTo(other.isSetAdId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAdId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.adId, other.adId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCreatedTime()).compareTo(other.isSetCreatedTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreatedTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createdTime, other.createdTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetModifiedTime()).compareTo(other.isSetModifiedTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetModifiedTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.modifiedTime, other.modifiedTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("TAdDraft(");
    boolean first = true;

    sb.append("id:");
    if (this.id == null) {
      sb.append("null");
    } else {
      sb.append(this.id);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("uid:");
    if (this.uid == null) {
      sb.append("null");
    } else {
      sb.append(this.uid);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("siteId:");
    if (this.siteId == null) {
      sb.append("null");
    } else {
      sb.append(this.siteId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("data:");
    if (this.data == null) {
      sb.append("null");
    } else {
      sb.append(this.data);
    }
    first = false;
    if (isSetPayStatus()) {
      if (!first) sb.append(", ");
      sb.append("payStatus:");
      if (this.payStatus == null) {
        sb.append("null");
      } else {
        sb.append(this.payStatus);
      }
      first = false;
    }
    if (isSetPaidTime()) {
      if (!first) sb.append(", ");
      sb.append("paidTime:");
      sb.append(this.paidTime);
      first = false;
    }
    if (isSetPostStatus()) {
      if (!first) sb.append(", ");
      sb.append("postStatus:");
      if (this.postStatus == null) {
        sb.append("null");
      } else {
        sb.append(this.postStatus);
      }
      first = false;
    }
    if (isSetAdId()) {
      if (!first) sb.append(", ");
      sb.append("adId:");
      if (this.adId == null) {
        sb.append("null");
      } else {
        sb.append(this.adId);
      }
      first = false;
    }
    if (isSetCreatedTime()) {
      if (!first) sb.append(", ");
      sb.append("createdTime:");
      sb.append(this.createdTime);
      first = false;
    }
    if (isSetModifiedTime()) {
      if (!first) sb.append(", ");
      sb.append("modifiedTime:");
      sb.append(this.modifiedTime);
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    if (id == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'id' was not present! Struct: " + toString());
    }
    if (uid == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'uid' was not present! Struct: " + toString());
    }
    if (siteId == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'siteId' was not present! Struct: " + toString());
    }
    if (data == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'data' was not present! Struct: " + toString());
    }
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class TAdDraftStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public TAdDraftStandardScheme getScheme() {
      return new TAdDraftStandardScheme();
    }
  }

  private static class TAdDraftStandardScheme extends org.apache.thrift.scheme.StandardScheme<TAdDraft> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, TAdDraft struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.id = iprot.readString();
              struct.setIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // UID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.uid = iprot.readString();
              struct.setUidIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // SITE_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.siteId = iprot.readString();
              struct.setSiteIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // DATA
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.data = iprot.readString();
              struct.setDataIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // PAY_STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.payStatus = com.baixing.thrift.moutan.AdDraftPayStatus.findByValue(iprot.readI32());
              struct.setPayStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // PAID_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.paidTime = iprot.readI64();
              struct.setPaidTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // POST_STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.postStatus = com.baixing.thrift.moutan.AdDraftPostStatus.findByValue(iprot.readI32());
              struct.setPostStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // AD_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.adId = iprot.readString();
              struct.setAdIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // CREATED_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.createdTime = iprot.readI64();
              struct.setCreatedTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // MODIFIED_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.modifiedTime = iprot.readI64();
              struct.setModifiedTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, TAdDraft struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.id != null) {
        oprot.writeFieldBegin(ID_FIELD_DESC);
        oprot.writeString(struct.id);
        oprot.writeFieldEnd();
      }
      if (struct.uid != null) {
        oprot.writeFieldBegin(UID_FIELD_DESC);
        oprot.writeString(struct.uid);
        oprot.writeFieldEnd();
      }
      if (struct.siteId != null) {
        oprot.writeFieldBegin(SITE_ID_FIELD_DESC);
        oprot.writeString(struct.siteId);
        oprot.writeFieldEnd();
      }
      if (struct.data != null) {
        oprot.writeFieldBegin(DATA_FIELD_DESC);
        oprot.writeString(struct.data);
        oprot.writeFieldEnd();
      }
      if (struct.payStatus != null) {
        if (struct.isSetPayStatus()) {
          oprot.writeFieldBegin(PAY_STATUS_FIELD_DESC);
          oprot.writeI32(struct.payStatus.getValue());
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetPaidTime()) {
        oprot.writeFieldBegin(PAID_TIME_FIELD_DESC);
        oprot.writeI64(struct.paidTime);
        oprot.writeFieldEnd();
      }
      if (struct.postStatus != null) {
        if (struct.isSetPostStatus()) {
          oprot.writeFieldBegin(POST_STATUS_FIELD_DESC);
          oprot.writeI32(struct.postStatus.getValue());
          oprot.writeFieldEnd();
        }
      }
      if (struct.adId != null) {
        if (struct.isSetAdId()) {
          oprot.writeFieldBegin(AD_ID_FIELD_DESC);
          oprot.writeString(struct.adId);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetCreatedTime()) {
        oprot.writeFieldBegin(CREATED_TIME_FIELD_DESC);
        oprot.writeI64(struct.createdTime);
        oprot.writeFieldEnd();
      }
      if (struct.isSetModifiedTime()) {
        oprot.writeFieldBegin(MODIFIED_TIME_FIELD_DESC);
        oprot.writeI64(struct.modifiedTime);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class TAdDraftTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public TAdDraftTupleScheme getScheme() {
      return new TAdDraftTupleScheme();
    }
  }

  private static class TAdDraftTupleScheme extends org.apache.thrift.scheme.TupleScheme<TAdDraft> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, TAdDraft struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      oprot.writeString(struct.id);
      oprot.writeString(struct.uid);
      oprot.writeString(struct.siteId);
      oprot.writeString(struct.data);
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetPayStatus()) {
        optionals.set(0);
      }
      if (struct.isSetPaidTime()) {
        optionals.set(1);
      }
      if (struct.isSetPostStatus()) {
        optionals.set(2);
      }
      if (struct.isSetAdId()) {
        optionals.set(3);
      }
      if (struct.isSetCreatedTime()) {
        optionals.set(4);
      }
      if (struct.isSetModifiedTime()) {
        optionals.set(5);
      }
      oprot.writeBitSet(optionals, 6);
      if (struct.isSetPayStatus()) {
        oprot.writeI32(struct.payStatus.getValue());
      }
      if (struct.isSetPaidTime()) {
        oprot.writeI64(struct.paidTime);
      }
      if (struct.isSetPostStatus()) {
        oprot.writeI32(struct.postStatus.getValue());
      }
      if (struct.isSetAdId()) {
        oprot.writeString(struct.adId);
      }
      if (struct.isSetCreatedTime()) {
        oprot.writeI64(struct.createdTime);
      }
      if (struct.isSetModifiedTime()) {
        oprot.writeI64(struct.modifiedTime);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, TAdDraft struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      struct.id = iprot.readString();
      struct.setIdIsSet(true);
      struct.uid = iprot.readString();
      struct.setUidIsSet(true);
      struct.siteId = iprot.readString();
      struct.setSiteIdIsSet(true);
      struct.data = iprot.readString();
      struct.setDataIsSet(true);
      java.util.BitSet incoming = iprot.readBitSet(6);
      if (incoming.get(0)) {
        struct.payStatus = com.baixing.thrift.moutan.AdDraftPayStatus.findByValue(iprot.readI32());
        struct.setPayStatusIsSet(true);
      }
      if (incoming.get(1)) {
        struct.paidTime = iprot.readI64();
        struct.setPaidTimeIsSet(true);
      }
      if (incoming.get(2)) {
        struct.postStatus = com.baixing.thrift.moutan.AdDraftPostStatus.findByValue(iprot.readI32());
        struct.setPostStatusIsSet(true);
      }
      if (incoming.get(3)) {
        struct.adId = iprot.readString();
        struct.setAdIdIsSet(true);
      }
      if (incoming.get(4)) {
        struct.createdTime = iprot.readI64();
        struct.setCreatedTimeIsSet(true);
      }
      if (incoming.get(5)) {
        struct.modifiedTime = iprot.readI64();
        struct.setModifiedTimeIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

